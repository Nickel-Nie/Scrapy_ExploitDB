# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html


# useful for handling different item types with a single interface
from itemadapter import ItemAdapter
import pymysql
import logging


logger = logging.getLogger(__name__)


class ScrapyExploitdbPipeline:
    def process_item(self, item, spider):
        with open(item['filename'], 'wb') as f:
            f.write(item['code'].encode())
        return item


class MysqlPipeline(object):
    def __init__(self):
        # 连接数据库
        self.connect = pymysql.connect(
            host='127.0.0.1',  # 数据库地址
            port=3306,  # 数据库端口
            db='scrapy_test',  # 数据库名
            user='root',  # 数据库用户名
            passwd='asd924146134',  # 数据库密码
            charset='utf8',  # 编码方式
            use_unicode=True)
        # 通过cursor执行增删查改
        self.cursor = self.connect.cursor()

    def process_item(self, item, spider):
        try:
            self.cursor.execute("""
            insert into exploit_db_table(id, cve_id, name, author, code_path, disclosure_date, type, platform)
            values(%s, %s, %s, %s, %s, %s, %s, %s)""",
                                (item['id'],
                                 item['cve_id'],
                                 item['name'],
                                 item['author'],
                                 item['filename'],
                                 item['disclosure_date'],
                                 item['type'],
                                 item['platform']))
        except pymysql.err.IntegrityError:
            logger.warning('id重复')
        else:
            # 提交sql语句
            self.connect.commit()
        return item

    def close_spider(self, spider):
        self.cursor.close()
        self.connect.close()
